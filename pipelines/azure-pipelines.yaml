name: $(Date:yyyy-MM-dd)

trigger:
  - main
  - staging

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'azurecr'
  kubernetesServiceConnection: 'kubernetesServiceConnection'
  imageName: 'agentscape'
  containerRegistry: 'scaleuplabs.azurecr.io'


pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true

  - bash: |
      branch=$(Build.SourceBranch)
      branch=${branch#refs/heads/}
      branch=${branch//\//_}

      hash=$(git rev-parse --short HEAD)
      dockertag="${branch}_${hash}"

      echo "##vso[task.setvariable variable=branch]$branch"
      echo "##vso[task.setvariable variable=hash]$hash"
      echo "##vso[task.setvariable variable=dockertag]$dockertag"

      echo dockertag:$dockertag

    displayName: 'Get Current Branch and Tag'


  - task: Docker@2
    displayName: Login to Azure Container Registry
    inputs:
      command: login
      containerRegistry: $(dockerRegistryServiceConnection)

  - task: Docker@2
    displayName: Build
    inputs:
      command: build
      arguments: '--build-arg NAME=$(imageName)
                  --build-arg BRANCH=$(branch)
                  --build-arg HASH=$(hash)
                  --build-arg DOCKERTAG=$(dockertag)
                  --build-arg CREATED=$(Build.BuildNumber)'
      repository: '$(imageName)'
      dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
      buildContext: $(Build.SourcesDirectory)/app
      tags: |
        $(dockertag)

  - task: Docker@2
    displayName: Push
    inputs:
      command: push
      repository: '$(imageName)'
      containerRegistry: $(dockerRegistryServiceConnection)
      tags: |
        $(dockertag)

  - bash: |
      sed -i 's|image: .*$|image: scaleuplabs.azurecr.io/$(imageName):$(dockertag)|' $(Build.SourcesDirectory)/deployment/prod/k8s/deployment.yaml
    displayName: 'Update image in Kubernetes manifest (Production)'
    condition: eq(variables['Build.SourceBranchName'], 'main')

  - task: Kubernetes@1
    displayName: 'Deploy to AKS (Production)'
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceEndpoint: $(kubernetesServiceConnection)
      useClusterAdmin: false
      command: apply
      arguments: '-f $(Build.SourcesDirectory)/deployment/prod/k8s/'
    condition: eq(variables['Build.SourceBranchName'], 'main')